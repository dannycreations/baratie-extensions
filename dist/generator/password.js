!function(){"use strict";const e={uppercase:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",lowercase:"abcdefghijklmnopqrstuvwxyz",numbers:"0123456789",symbols:"!@#$%^&*()_+-=[]{};':\",./<>?",ambiguous:"iIl1oO0B8S5Z2G6q9g"};function s(e){return{id:`has${e}`,label:`Include ${e}`,type:"boolean",value:!0}}function t(e,s){const t=s-e;if(t<=0)throw new Error("Max must be greater than min.");const o=new Uint32Array(1);let r;do{crypto.getRandomValues(o),r=o[0]}while(r>=4294967295-4294967295%t);return e+r%t}const o={name:"Password",category:"Generator",description:"Generates strong, random passwords with customizable options.",spices:[{id:"length",label:"Password Length",type:"number",value:16,min:4,max:128,description:"The total length for the generated password."},s("Uppercase"),s("Lowercase"),s("Numbers"),s("Symbols"),{id:"excludeAmbiguous",label:"Exclude Ambiguous",type:"boolean",value:!0,description:`Exclude similar-looking characters like i, l, 1, O, 0. (Set: ${e.ambiguous})`},{id:"excludedChars",label:"Custom Exclusions",type:"string",value:"",placeholder:"e.g., abc[]",description:"A custom set of characters to specifically exclude from generation."}],run:(s,o)=>{const r=new Set(o.excludedChars.split(""));if(o.excludeAmbiguous)for(const t of e.ambiguous)r.add(t);const n=[{include:o.hasUppercase,source:e.uppercase},{include:o.hasLowercase,source:e.lowercase},{include:o.hasNumbers,source:e.numbers},{include:o.hasSymbols,source:e.symbols}],a=[],l=[];for(const e of n)if(e.include){const s=e.source.split("").filter(e=>!r.has(e));s.length>0&&(a.push(...s),l.push(s[t(0,s.length)]))}if(0===a.length)return s.update("Error: No character types selected. Please enable at least one character set.");const c=[...l];for(let e=l.length;e<o.length;e++)c.push(a[t(0,a.length)]);for(let e=c.length-1;e>0;e--){const s=t(0,e+1);[c[e],c[s]]=[c[s],c[e]]}return s.update(c.slice(0,o.length).join(""))}};Baratie.ingredient.register(o)}();
